[{"/home/alexdolls/Desktop/check_is_working/frontend/src/index.js":"1","/home/alexdolls/Desktop/check_is_working/frontend/src/App.js":"2","/home/alexdolls/Desktop/check_is_working/frontend/src/reportWebVitals.js":"3","/home/alexdolls/Desktop/check_is_working/frontend/src/react_interface.js":"4"},{"size":518,"mtime":1648567106991,"results":"5","hashOfConfig":"6"},{"size":528,"mtime":1648562471016,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1648562471016,"results":"8","hashOfConfig":"6"},{"size":19726,"mtime":1648567852038,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"2kt58w",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/alexdolls/Desktop/check_is_working/frontend/src/index.js",[],[],["24","25"],"/home/alexdolls/Desktop/check_is_working/frontend/src/App.js",[],[],"/home/alexdolls/Desktop/check_is_working/frontend/src/reportWebVitals.js",[],[],"/home/alexdolls/Desktop/check_is_working/frontend/src/react_interface.js",["26","27"],[],"import React from 'react';\n\n\nconst default_user_password = \"12345678\"\n\nconsole.log(React.version)\n\nconst host = \"http://127.0.0.1:8000/userslist/\"\nconst users_api_url = host + \"api/users/\"\nconst groups_api_url = host + \"api/groups/\"\n\nconst user_remove_api_url = host + \"api/users/\"\n\nclass Layout extends React.Component {\n \tconstructor(props){\n  \t\tsuper(props);\n \t\tthis.state = {users: \"active\", groups: \"\", table: React.createElement(UsersTable)};\n \t\tthis.handleClick = this.handleClick.bind(this);\n \t}\n\trender(){\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\tReact.createElement(\n\t\t\t\"ul\",\n\t\t\t{\n\t\t\t\tclassName: \"nav nav-tabs\",\n\t\t\t},\n\t\t\tReact.createElement(\n\t\t\t\t\"li\",\n\t\t\t\t{\n\t\t\t\t\tclassName: \"nav-item\",\n\t\t\t\t},\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"button\",\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: \"nav-link\" + \" \" + this.state.users,\n\t\t\t\t\t\tonClick: this.handleClick,\n\t\t\t\t\t},\n\t\t\t\t\t\"Users\"\n\t\t\t\t),\n\t\t\t),\n\t\t\tReact.createElement(\n                                \"li\",\n                                {\n                                        className: \"nav-item\",\n                                },\n                                React.createElement(\n                                        \"button\",\n                                        {\n                                                className: \"nav-link\" + \" \" + this.state.groups,\n\t\t\t\t\t\tonClick: this.handleClick,\n                                        },\n                                        \"Groups\"\n                                ),\n                        ),\n\t\t),\n\t\tthis.state.table\n\t)\n\t}\n\thandleClick(e) {\n\t\tif (e.target.innerHTML === \"Users\"){\n\t\t\tthis.setState({\n\t\t\t\tusers: \"active\",\n\t\t\t\tgroups: \"\",\n\t\t\t\ttable: React.createElement(UsersTable)\n\t\t\t})\n\t\t} else if (e.target.innerHTML === \"Groups\"){\n\t\t\tthis.setState({\n\t\t\t\tusers: \"\",\n\t\t\t\tgroups: \"active\",\n\t\t\t\ttable: React.createElement(GroupsTable)\n\t\t\t})\n\t\t}\n\t}\n}\nclass UsersTable extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleClickDelete = this.handleClickDelete.bind(this);\n\t\tthis.handleClickEdit = this.handleClickEdit.bind(this);\n\t\tthis.handleClickAddUser = this.handleClickAddUser.bind(this)\n\t\tthis.state = {users: [], groups: [],user_id_edit: \"none\"};\n\t}\n\t\n\tget_group_name(group_id){\n\t\tvar result = \"\";\n\t\tfor (var i = 0; i < this.state.groups.length; i++) {\n\t\t\tif ((\"\" + group_id) === (\"\" + this.state.groups[i].id)){\n\t\t\t\tresult = \"\" + this.state.groups[i].name;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tget_users(){\n        fetch(users_api_url)\n            .then(res => res.json())\n\t\t.then(\n\t\t\t(result)=> {\n\t\t\t\tthis.setState({\n\t\t\t\t\tusers:result,\n\t\t\t\t\tuser_id_edit: \"none\",\n\t\t\t\t});\n\t\t\t}\n\t\t)\n        }\n\n\tget_groups(){\n        fetch(groups_api_url)\n            .then(res => res.json())\n                .then(\n                        (result)=> {\n                                this.setState({\n\t\t\t\t\tgroups: result,\n\t\t\t\t});\n                        }\n                )\n        }\n\n\t\n\tcomponentDidMount() {\n\t\tthis.get_users();\n\t\tthis.get_groups();\n\t}\n\n\trender(){\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\t\tReact.createElement(\n\t\t\t\"table\",\n\t\t\t{\n\t\t\t\tclassName:\"table table-striped\",\n\t\t\t\tstyle: {\n\t\t\t\t\ttextAlign:\"center\",\n\t\t\t\t}\n\t\t\t},\n\t\t\tReact.createElement(\n\t\t\t\t\"thead\",\n\t\t\t\t{},\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\t{},\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"ID\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"username\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"created\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"group\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"actions\"),\n\t\t\t\t)\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"tbody\",\n\t\t\t\t{},\n\t\t\t\tthis.state.users.map(user => (\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\t\"null\",\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"row\"}, user.id),\n\t\t\t\t\tReact.createElement(\"td\", {scope:\"col\"},\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: \"username\" + user.id,\n\t\t\t\t\t\t\t\tstyle:{wordWrap: \"break-word\"}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.give_edit_element(user.username, user.id),\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\"td\", {scope:\"col\"}, user.date_joined),\n\t\t\t\t\tReact.createElement(\"td\", {scope:\"col\"},\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"div\",\n\t\t\t\t\t\t\t{id: \"selectgroups\" + user.id},\n\t\t\t\t\t\t\tthis.give_select_element(user.id, user.groups)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"td\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscope:\"col\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"button\",\n\t\t\t\t\t\t\t\tid: \"del\" + user.id,\n\t\t\t\t\t\t\t\tvalue: user.id,\n\t\t\t\t\t\t\t\tonClick: this.handleClickDelete,\n\t\t\t\t\t\t\t\tclassName: \"btn btn-danger\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Delete\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis.give_edit_button(user.id),\n\t\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\t)),\n\t\t\t)\n\t\t),\n\t\tReact.createElement(\n                        \"div\",\n                        {style:{padding: \"10px\"}},\n                        React.createElement(\n                                \"button\",\n                                {\n                                        type: \"button\",\n                                        style: {marginRight: \"10px\", height: \"\"},\n                                        onClick: this.handleClickAddUser,\n                                        className: \"btn btn-outline-success\"\n                                },\n                                \"Add User\"\n                        ),\n                        React.createElement(\"input\",\n                                {\n                                        type:\"text\",\n                                        id: \"addUserUsername\",\n                                        placeholder:\"Username\",\n\t\t\t\t\tonKeyPress: this.handleKeyPressAddUser,\n                                        style: {marginRight:\"10px\"},\n                                }\n                        ),\n                        React.createElement(\n                                \"select\",\n                                {\n                                        id: \"groupSelect\",\n\t\t\t\t\tonKeyPress: this.handleKeyPressAddUser,\n                                },\n\t\t\t\tReact.createElement(\"option\", {value: \"\"}, \"None\"),\n                                this.state.groups.map(group => (\n                                        React.createElement(\n                                                \"option\",\n                                                {\n                                                        value:group.id,\n                                                        key: group.id\n                                                },\n                                                group.name\n                                        )\n                                ))\n                        )\n                )\n\n)\n\t}\n\tgive_select_element(user_id, groups) {\n\t\tif ((user_id + \"\")  === this.state.user_id_edit) {\n                return React.createElement(\n                        \"select\",\n                        {\n                                id: \"editselectgroup\" + user_id,\n                        },\n\t\t\tReact.createElement(\"option\", { value: \"\" }, \"None\"),\n\t\t\tthis.state.groups.map(group => (\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"option\",\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: group.id,\n\t\t\t\t\t\tkey: group.id\n\t\t\t\t\t},\n\t\t\t\t\tgroup.name\n\t\t\t\t)\n\t\t\t))\n                )\n        }\n                else{\n                \treturn this.get_group_name(groups);\n                }\n\n\t}\n\n\tgive_edit_element(username, user_id){\n\t\tif ((user_id + \"\")  === this.state.user_id_edit) {\n\t\treturn React.createElement(\n\t\t\t\"input\",\n\t\t\t{\n\t\t\t\ttype: \"text\",\n\t\t\t\tclassName: \"form-control\",\n\t\t\t\tid: \"input\" + user_id,\n\t\t\t\tdefaultValue: username\n\t\t\t}\n\t\t)\n\t}\n\t\telse{\n\t\treturn username\n\t\t}\n\t}\n\tgive_edit_button(user_id){\n\t\tvar btnclass = \"btn btn-info\"\n\t\tvar btntext = \"Edit\"\n\t\tif ((user_id + \"\")  === this.state.user_id_edit) {\n\t\t\tbtnclass = \"btn btn-success\"\n\t\t\tbtntext = \"Confirm\"\n        }\n                return React.createElement(\n                                \"button\",\n                                {\n                                        type: \"button\",\n                                        className: btnclass,\n                                        id: \"edit\" + user_id,\n                                        value: user_id,\n                                        onClick: this.handleClickEdit,\n                                        style: {marginLeft: \"10px\"}\n                                },\n                                btntext\n                        )\n\n\t}\n\t\n\thandleKeyPressAddUser = (event) => {\n\t\tif(event.key === \"Enter\"){\n\t\t\tthis.handleClickAddUser(event);\n\t\t}\n\t}\n\n\thandleClickDelete(e) {\n\t\tvar remove_url = user_remove_api_url + e.target.value + \"/remove/\"\n\t\tfetch(remove_url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tthis.get_users();\n\t\t\t\t\tconsole.log(result.detail)\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\thandleClickEdit(e) {\n\t\tif ((\"\" + e.target.value) === \"\" + (this.state.user_id_edit)){\n\t\t\tvar edit_username_api_url = user_remove_api_url + e.target.value + \"/change/username/\"\n\t\t\tvar new_username = document.querySelector(\"#input\" + e.target.value).value\n\t\t\tconst group_select_dom = document.querySelector('#editselectgroup' + e.target.value);\n\t\t\tconsole.log(e.target.value)\n\t\t\tvar group_id = group_select_dom.options[group_select_dom.selectedIndex].value\n\t\t\tconsole.log(\"Group ID = \" + group_id)\n\t\t\tvar add_group_url = user_remove_api_url + e.target.value + \"/change/addgroup/?group_id=\" + group_id\n\n\t\t\tfetch(add_group_url)\n\t\t\tfetch(edit_username_api_url + new_username)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tthis.get_users();\n\t\t\t\t\tif (result.error)\n\t\t\t\t\t\talert(result.error)\n\t\t\t\t\telse\n\t\t\t\t\t\tconsole.log(result.detail)\n\t\t\t\t}\n\t\t\t)\n\t\t}else{\n\t\tthis.setState({\n\t\t\tuser_id_edit: \"\" + e.target.value\n\t\t});\n\t\t}\n\t}\n\thandleClickAddUser(e) {\n                const username_input_dom = document.querySelector('#addUserUsername');\n                const group_select_dom = document.querySelector('#groupSelect');\n                var username = username_input_dom.value + \"\";\n                var group_id = group_select_dom.options[group_select_dom.selectedIndex].value\n                var add_user_url = `${user_remove_api_url}create/${username}/${default_user_password}/?group=${group_id}`\n                fetch(add_user_url)\n                        .then(res => res.json())\n                        .then(\n                                (result) => {\n\t\t\t\t\tthis.get_users();\n                                        if (result.error)\n                                                alert(result.error)\n                                        else\n                                                console.log(result.detail)\n                                }\n                        )\n        }\n}\n\nclass GroupsTable extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleClickEdit = this.handleClickEdit.bind(this);\n\t\tthis.handleClickDelete = this.handleClickDelete.bind(this);\n\t\tthis.handleClickAddGroup = this.handleClickAddGroup.bind(this);\n\t\tthis.state = {\n\t\t\tgroups: [],\n\t\t\tgroup_id_edit: \"none\",\n\t\t};\n\t}\n\n        get_groups(){\n        fetch(groups_api_url)\n            .then(res => res.json())\n                .then(\n                        (result)=> {\n                                this.setState({\n                                        groups: result,\n\t\t\t\t\tgroup_id_edit: \"none\",\n                                });\n\t\t\t}\n                )\n        }\n\n        componentDidMount() {\n                this.get_groups();\n        }\n\n\trender(){\n\t\treturn React.createElement(\n\t\t\t\"div\",\n\t\t\t{},\n\t\tReact.createElement(\n\t\t\t\"table\",\n\t\t\t{\n\t\t\t\tclassName: \"table table-striped\",\n\t\t\t\tstyle: {textAlign: \"center\"},\n\t\t\t},\n\t\t\tReact.createElement(\n\t\t\t\t\"thead\",\n\t\t\t\t{},\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"tr\",\n\t\t\t\t\t{},\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"ID\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"Name\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"Description\"),\n\t\t\t\t\tReact.createElement(\"th\", {scope:\"col\"}, \"Actions\"),\n\t\t\t\t)\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"tbody\",\n\t\t\t\t{},\n\t\t\t\tthis.state.groups.map(group => (\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"tr\",\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tReact.createElement(\"th\", {scope:\"row\"}, group.id),\n\t\t\t\t\t\tReact.createElement(\"td\", {}, this.give_edit_element(group.name, group.id)),\n\t\t\t\t\t\tReact.createElement(\"td\", {}, this.give_edit_desc(group.description, group.id)),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"td\",\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tReact.createElement(\n                                                \"div\",\n                                                {},\n                                                React.createElement(\n                                                        \"button\",\n                                                        {\n                                                                type: \"button\",\n                                                                id: \"del\" + group.id,\n                                                                value: group.id,\n                                                                onClick: this.handleClickDelete,\n                                                                className: \"btn btn-danger\",\n                                                        },\n                                                        \"Delete\"\n                                                ),\n                                                this.give_edit_button(group.id),\n                                                ),\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t))\n\t\t\t)\n\t\t),\n\t\t\tReact.createElement(\n                                                \"div\",\n                                                {style:{padding: \"10px\"}},\n                                                React.createElement(\n                                                        \"button\",\n                                                        {\n                                                                type: \"button\",\n                                                                style: {marginRight: \"10px\", height: \"\"},\n                                                                onClick: this.handleClickAddGroup,\n                                                                className: \"btn btn-outline-success\"\n                                                        },\n                                                        \"Add Group\"\n                                                ),\n                                                React.createElement(\n\t\t\t\t\t\t\t\"input\",\n                                                        {\n                                                                type:\"text\",\n                                                                id: \"newGroupName\",\n                                                                placeholder:\"Name\",\n\t\t\t\t\t\t\t\tonKeyPress: this.handleKeyPressAddGroup,\n                                                                style: {marginRight:\"10px\"},\n                                                        }\n                                                ),\n                                                React.createElement(\n                                                        \"input\",\n                                                        {       type: \"text\",\n                                                                id: \"newGroupDesc\",\n\t\t\t\t\t\t\t\tonKeyPress: this.handleKeyPressAddGroup,\n                                                                placeholder: \"Description\",\n                                                        },\n                                                )\n                                        )\n\n\t\t)\n\t}\n\n\tgive_edit_desc(name, group_id){\n                if ((group_id + \"\")  === this.state.group_id_edit) {\n                return React.createElement(\n                        \"input\",\n                        {\n                                type: \"text\",\n                                id: \"inputdesc\" + group_id,\n                                defaultValue: name\n                        }\n                )\n        }\n                else{\n                return name\n                }\n        }\n\n\tgive_edit_element(name, group_id){\n                if ((group_id + \"\")  === this.state.group_id_edit) {\n                return React.createElement(\n                        \"input\",\n                        {\n                                type: \"text\",\n                                id: \"inputname\" + group_id,\n                                defaultValue: name\n                        }\n                )\n        }\n                else{\n                return name\n                }\n        }\n\n        give_edit_button(group_id){\n                var btnclass = \"btn btn-info\"\n                var btntext = \"Edit\"\n                if ((group_id + \"\")  === this.state.group_id_edit) {\n                        btnclass = \"btn btn-success\"\n                        btntext = \"Confirm\"\n        }\n                return React.createElement(\n                                \"button\",\n                                {\n                                        type: \"button\",\n                                        className: btnclass,\n                                        id: \"edit\" + group_id,\n                                        value: group_id,\n                                        onClick: this.handleClickEdit,\n                                        style: {marginLeft: \"10px\"}\n                                },\n                                btntext\n                        )\n\n        }\n\n\thandleKeyPressAddGroup = (event) => {\n\t  if(event.key === 'Enter'){\n\t\tthis.handleClickAddGroup(event);\n\t  }\n\t}\t\n\t\n\thandleClickAddGroup(e) {\n\t\tvar add_group_name = document.querySelector(\"#newGroupName\").value\n\t\tvar add_group_desc = document.querySelector(\"#newGroupDesc\").value\n\t\tvar add_new_group_url = groups_api_url + \"create/\" + add_group_name + \"/?desc=\" + add_group_desc;\n\t\tfetch(add_new_group_url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tthis.get_groups();\n\t\t\t\t\tif (result.error)\n\t\t\t\t\t\talert(result.error)\n\t\t\t\t\telse\n\t\t\t\t\t\tconsole.log(result.detail)\n\t\t\t\t}\n\t\t\t)\n\t}\n\t\n\thandleClickDelete(e) {\n\t\tvar group_id = e.target.value\n\t\tvar group_remove_url = groups_api_url + group_id + \"/remove/\"\n\t\tfetch(group_remove_url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tthis.get_groups();\n\t\t\t\t\tif (result.error)\n\t\t\t\t\t\talert(result.error)\n\t\t\t\t\telse\n\t\t\t\t\t\tconsole.log(result.detail)\n\t\t\t\t}\n\t\t\t)\n\t}\n\t\n\thandleClickEdit(e) {\n                if ((\"\" + e.target.value) === \"\" + (this.state.group_id_edit)){\n                        var edit_name_api_url = groups_api_url + e.target.value + \"/change/groupname/\"\n\t\t\tvar edit_desc_api_url = groups_api_url + e.target.value + \"/change/groupdesc/\"\n                        var new_name = document.querySelector(\"#inputname\" + e.target.value).value\n\t\t\tvar new_desc = document.querySelector(\"#inputdesc\" + e.target.value).value\n                        fetch(edit_name_api_url + new_name + \"/\")\n                        .then(res => res.json())\n                        .then(\n                                (result) => {\n\t\t\t\t\tvar name_edit_result = result\n\t\t\t\t\tfetch(edit_desc_api_url + new_desc + \"/\")\n\t\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t(result) => {\n\t\t\t\t\t\t\t\tthis.get_groups();\n                                        \t\tif (name_edit_result.error)\n                                                \t\talert(name_edit_result.error);\n                                        \t\telse\n                                                \t\tconsole.log(name_edit_result.detail);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n                                }\n                        )\n                }else{\n                this.setState({\n                        group_id_edit: \"\" + e.target.value\n                });\n                }\n        }\n\n\n}\n\nexport default Layout;\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":37,"column":29,"nodeType":"34","messageId":"35","endLine":37,"endColumn":30},{"ruleId":"32","severity":1,"message":"33","line":51,"column":71,"nodeType":"34","messageId":"35","endLine":51,"endColumn":72},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]